
package utfpr;

import com.google.gson.Gson;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;

/**
 *
 * @author USER
 */
public class TelaJFrame extends javax.swing.JFrame {
    /**cria o modelo da lista*/
       DefaultListModel modeloLista = new DefaultListModel();
       int carregaprimeiro = 0;
       
    /**
     * Creates new form TelaJFrame
     */
    public TelaJFrame() {
        setTitle("UF e Municípios");
        initComponents();
        this.listRegiao.setModel(modeloLista);
    }   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectUF = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnCarregar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listRegiao = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        selectUF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectUFActionPerformed(evt);
            }
        });

        jLabel1.setText("UF:");

        btnCarregar.setText("Carregar");
        btnCarregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarregarActionPerformed(evt);
            }
        });

        listRegiao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listRegiaoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listRegiao);

        jLabel2.setText("Municipios:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectUF, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCarregar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectUF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnCarregar))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCarregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarregarActionPerformed
            
        if(carregaprimeiro == 0){           
            carregaprimeiro++;
        try {
            HttpClient httpClient = HttpClients.createDefault();
            HttpGet request = new HttpGet("https://servicodados.ibge.gov.br/api/v1/localidades/estados");
            HttpGet request2 = new HttpGet("https://servicodados.ibge.gov.br/api/v1/localidades/estados/RO/municipios");

            HttpResponse response = httpClient.execute(request);
            HttpResponse response2 = httpClient.execute(request2);
            
            HttpEntity entity = response.getEntity();
            HttpEntity entity2 = response2.getEntity();
            
            String responseString = EntityUtils.toString(entity);
            String responseString2 = EntityUtils.toString(entity2);

            Gson gson = new Gson();
            UF[] ufs = gson.fromJson(responseString, UF[].class);
            Municipio[] municipios = gson.fromJson(responseString2, Municipio[].class);
            
            for (Municipio municipio : municipios) {
                modeloLista.addElement(municipio.getNome());
            }
            
            for (UF uf : ufs) {
                String saida = uf.getNome() + " (" + uf.getSigla() + ")";               
                 this.selectUF.addItem(saida);
                                        
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        }else{
        JOptionPane.showMessageDialog(this, "As ufs e municípios já foram carregados!");    
        }
        
       
    }//GEN-LAST:event_btnCarregarActionPerformed

    private void selectUFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectUFActionPerformed
   
    modeloLista.clear(); // Limpa a lista de municípios antes de adicionar os novos
    
    String ufSelecionada = (String) selectUF.getSelectedItem();
    String ufSigla = ufSelecionada.substring(ufSelecionada.lastIndexOf("(") + 1, ufSelecionada.lastIndexOf(")"));
    
    try {
        HttpClient httpClient = HttpClients.createDefault();
        String url = "https://servicodados.ibge.gov.br/api/v1/localidades/estados/" + ufSigla + "/municipios";
        HttpGet request = new HttpGet(url);
        HttpResponse response = httpClient.execute(request);
        HttpEntity entity = response.getEntity();
        String responseString = EntityUtils.toString(entity);
        
        Gson gson = new Gson();
        Municipio[] municipios = gson.fromJson(responseString, Municipio[].class);
        
        for (Municipio municipio : municipios) {
            modeloLista.addElement(municipio.getNome());
        }
    } catch (Exception e) {
        e.printStackTrace();
    }


               
    }//GEN-LAST:event_selectUFActionPerformed

    private void listRegiaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listRegiaoMouseClicked
    if (listRegiao.getSelectedIndex() != -1) {
        if (evt.getClickCount() == 2) {
            
            String nomeMunicipioSelecionado = listRegiao.getSelectedValue();
            Municipio municipio = buscarMunicipioPorNome(nomeMunicipioSelecionado);
            String ufSelecionada = (String) selectUF.getSelectedItem();
            String UF = ufSelecionada.substring(ufSelecionada.lastIndexOf("(") + 1, ufSelecionada.lastIndexOf(")"));
            String regiao = selecionarRegiao();
                     
            if (municipio != null) {
                TelaSecundariaJDialog janela2 = new TelaSecundariaJDialog(this, true, municipio, UF, regiao);
                janela2.setVisible(true);
            }
        }
    }
    }//GEN-LAST:event_listRegiaoMouseClicked

       private String selecionarRegiao() {
      String ufSelecionada = (String) selectUF.getSelectedItem();
    String ufSigla = ufSelecionada.substring(ufSelecionada.lastIndexOf("(") + 1, ufSelecionada.lastIndexOf(")")); // Sigla do estado desejado

        try {
            HttpClient httpClient = HttpClients.createDefault();
            String url = "https://servicodados.ibge.gov.br/api/v1/localidades/estados/" + ufSigla;
            HttpGet request = new HttpGet(url);
            HttpResponse response = httpClient.execute(request);
            HttpEntity entity = response.getEntity();
            String responseString = EntityUtils.toString(entity);

            Gson gson = new Gson();
            Estado estado = gson.fromJson(responseString, Estado.class);
            
            return estado.getRegiao().getNome();
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        return null;
    }
    
    
       private Municipio buscarMunicipioPorNome(String nomeMunicipio) {
    String ufSelecionada = (String) selectUF.getSelectedItem();
    String ufSigla = ufSelecionada.substring(ufSelecionada.lastIndexOf("(") + 1, ufSelecionada.lastIndexOf(")"));

    try {
        HttpClient httpClient = HttpClients.createDefault();
        String url = "https://servicodados.ibge.gov.br/api/v1/localidades/estados/" + ufSigla + "/municipios";
        HttpGet request = new HttpGet(url);
        HttpResponse response = httpClient.execute(request);
        HttpEntity entity = response.getEntity();
        String responseString = EntityUtils.toString(entity);

        Gson gson = new Gson();
        Municipio[] municipios = gson.fromJson(responseString, Municipio[].class);

        for (Municipio municipio : municipios) {
            if (municipio.getNome().equals(nomeMunicipio)) {
                return municipio;
            }
        }
    } catch (Exception e) {
        e.printStackTrace();
    }

    return null;
}
       
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCarregar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listRegiao;
    private javax.swing.JComboBox<String> selectUF;
    // End of variables declaration//GEN-END:variables
}
